name = "<SERVER_HOSTNAME>"
region = "<REGION_NAME_IF_NEEDED>"
datacenter = "<DATACENTRE_NAME>"

enable_debug = false
disable_update_check = false

bind_addr = "<SERVER_IP>"
advertise {
    http = "<SERVER_IP>:4656"
    rpc = "<SERVER_IP>:4657"
    serf = "<SERVER_IP>:4658"
}
ports {
    http = 4656
    rpc = 4657
    serf = 4658
}

consul {
    # The address to the Consul agent.
    address = "<SERVER_IP>:8500"
    # The service name to register the server and client with Consul.
    server_service_name = "nomad-servers"
    client_service_name = "nomad-clients"

    # Enables automatically registering the services.
    auto_advertise = true

    # Enabling the server and client to bootstrap using Consul.
    server_auto_join = true
    client_auto_join = true

    token = "<CONSUL_ACL_TOKEN>"
}

data_dir = "/media/docker/nomad"

log_level = "INFO"
enable_syslog = true

leave_on_terminate = true
leave_on_interrupt = false



acl {
    enabled = false
    token_ttl = "30s"
    policy_ttl = "30s"
    replication_token = ""
}

vault {
    enabled = true
    address = "http://<SERVER_IP>:8200/"
    allow_unauthenticated = true
    create_from_role = "nomad-cluster"
    task_token_ttl = ""
    ca_file = ""
    ca_path = ""
    cert_file = ""
    key_file = ""
    tls_server_name = ""
    tls_skip_verify = false
    token = "<VAULT_TOKEN>"
}
client {
    enabled = true

    node_class = ""
    no_host_uuid = false


    max_kill_timeout = "30s"

    network_speed = 0
    cpu_total_compute = 0

    gc_interval = "1m"
    gc_disk_usage_threshold = 80
    gc_inode_usage_threshold = 70
    gc_parallel_destroys = 2

    reserved {
        cpu = 0
        memory = 0
        disk = 1024
    }
    options {
        "docker.caps.whitelist" = "ALL"
        "docker.volumes.enabled" = "True"
        "docker.config.allow_privileged" = "True"
    }


    
}

telemetry {
  collection_interval = "1s"
  disable_hostname = true
  prometheus_metrics = true
  publish_allocation_metrics = true
  publish_node_metrics = true
}

